/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.

// You should NOT make any changes in this file as it will be overwritten.

// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './__root'
import { Route as AdminRouteImport } from './_admin'
import { Route as IndexRouteImport } from './index'
import { Route as OthersNotFoundRouteImport } from './_others/not-found'
import { Route as AuthSignInRouteImport } from './_auth/sign-in'
import { Route as AuthAuthRouteImport } from './_auth/_auth'
import { Route as AdminAdminPainelRouteImport } from './_admin/admin-painel'

const AdminRoute = AdminRouteImport.update({
  id: '/_admin',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const OthersNotFoundRoute = OthersNotFoundRouteImport.update({
  id: '/_others/not-found',
  path: '/not-found',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRoute,
} as any)
const AuthAuthRoute = AuthAuthRouteImport.update({
  id: '/_auth/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminAdminPainelRoute = AdminAdminPainelRouteImport.update({
  id: '/admin-painel',
  path: '/admin-painel',
  getParentRoute: () => AdminRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin-painel': typeof AdminAdminPainelRoute
  '/sign-in': typeof AuthSignInRoute
  '/not-found': typeof OthersNotFoundRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin-painel': typeof AdminAdminPainelRoute
  '/sign-in': typeof AuthSignInRoute
  '/not-found': typeof OthersNotFoundRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_admin': typeof AdminRouteWithChildren
  '/_admin/admin-painel': typeof AdminAdminPainelRoute
  '/_auth/_auth': typeof AuthAuthRoute
  '/_auth/sign-in': typeof AuthSignInRoute
  '/_others/not-found': typeof OthersNotFoundRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/admin-painel' | '/sign-in' | '/not-found'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/admin-painel' | '/sign-in' | '/not-found'
  id:
    | '__root__'
    | '/'
    | '/_admin'
    | '/_admin/admin-painel'
    | '/_auth/_auth'
    | '/_auth/sign-in'
    | '/_others/not-found'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
  AuthAuthRoute: typeof AuthAuthRoute
  OthersNotFoundRoute: typeof OthersNotFoundRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_others/not-found': {
      id: '/_others/not-found'
      path: '/not-found'
      fullPath: '/not-found'
      preLoaderRoute: typeof OthersNotFoundRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/sign-in': {
      id: '/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/_auth': {
      id: '/_auth/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthAuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_admin/admin-painel': {
      id: '/_admin/admin-painel'
      path: '/admin-painel'
      fullPath: '/admin-painel'
      preLoaderRoute: typeof AdminAdminPainelRouteImport
      parentRoute: typeof AdminRoute
    }
  }
}

interface AdminRouteChildren {
  AdminAdminPainelRoute: typeof AdminAdminPainelRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAdminPainelRoute: AdminAdminPainelRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  AuthAuthRoute: AuthAuthRoute,
  OthersNotFoundRoute: OthersNotFoundRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
